<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

	<!-- 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的UserRealm.java -->  
	<bean id="userRealm" class="com.carpool.shiro.UserRealm"/>

    <bean id="cluterShiroSessionDao" class="com.carpool.shiro.CluterShiroSessionDao"/>
    
    
    <!-- Java UUID sessionId生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
	<!-- 会话策略 -->
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="sessionIdGenerator" ref="sessionIdGenerator"/>
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
	</bean>
    
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<property name="name" value="mldn-session-id"/> <!-- 设置的sessionId的name -->
		<property name="httpOnly" value="true"/> <!-- 只支持http -->
		<property name="maxAge" value="-1"/> <!-- 浏览器关闭后cookie失效 -->
	</bean>

	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 设置session过期时间为1小时(单位：毫秒)，默认为30分钟 -->
		<property name="globalSessionTimeout" value="3600000"></property>
		<!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
        <!-- 是否开启会话验证器，默认是开启的 -->
		<property name="sessionValidationSchedulerEnabled" value="true"></property>
		<!-- 
            Shiro提供了会话验证调度器，用于定期的验证会话是否已过期，如果过期将停止会话；
            出于性能考虑，一般情况下都是获取会话时来验证会话是否过期并停止会话的；
            但是如在web环境中，如果用户不主动退出是不知道会话是否过期的，因此需要定期的检测会话是否过期，
            Shiro提供了会话验证调度器SessionValidationScheduler来做这件事情。
         -->
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/> 
		<!-- Shiro提供SessionDAO用于会话的CRUD -->
        <property name="sessionDAO" ref="sessionDAO"/>
        
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionIdCookieEnabled" value="true"/> 
	</bean>
	
	<!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <!-- 设置调度时间间隔，单位毫秒，默认就是1小时,  半小时:1800000 -->
        <property name="interval" value="3600000"/>
        <!-- 设置会话验证调度器进行会话验证时的会话管理器 -->
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
	
	<!-- Subject工厂 -->
    <bean id="subjectFactory" class="com.carpool.shiro.StatelessDefaultSubjectFactory"/>
	
	<!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->  
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="subjectFactory" ref="subjectFactory"/>
		
		<!-- 禁用session的存储策略 -->
		<!--<property name="subjectDAO.sessionStorageEvaluator.sessionStorageEnabled" value="false"/>   -->
		<property name="sessionManager" ref="sessionManager"/>
		
	    <property name="realm" ref="userRealm"/>
	    
	</bean>

	<!-- Shiro主过滤器本身功能十分强大,其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 -->
	<!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	    <!-- Shiro的核心安全接口,这个属性是必须的 -->  
	    <property name="securityManager" ref="securityManager"/>  
	    <!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.html"页面 -->  
	    <property name="loginUrl" value="/login.html"/>  
	    <!-- 登录成功后要跳转的连接 -->  
	    <property name="successUrl" value="/index.html"/>
	    <!-- 用户访问未对其授权的资源时,所显示的连接 -->  
	    <!-- 若想更明显的测试此属性可以修改它的值,如unauthor.jsp,然后用[玄玉]登录后访问/admin/listUser.jsp就看见浏览器会显示unauthor.jsp -->  
	    <property name="unauthorizedUrl" value="/"/>  
	    <!-- Shiro连接约束配置,即过滤链的定义 -->  
	    <!-- 此处可配合我的这篇文章来理解各个过滤连的作用http://blog.csdn.net/jadyer/article/details/12172839 -->  
	    <!-- 下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->  
	    <!-- anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 -->  
	    <!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->  
	    <property name="filterChainDefinitions">  
	        <value>
	        	/statics/**=anon
				/api/**=anon
				/api/**=noSessionCreation
	        	/login.html=anon
	        	/sys/login=anon
	        	/captcha.jpg=anon
	        	/**=authc
	        </value>
	    </property>
	</bean>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
</beans>